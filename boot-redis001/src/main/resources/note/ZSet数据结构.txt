ZSet的两种编码格式
  ziplist
  skiplist

当有序集合中包含的元素数量超过服务器属性 server.zset_max_ziplist_entries 的值（默认值为 128 ），
或者有序集合中新添加元素的 member 的长度大于服务器属性 server.zset_max_ziplist_value 的值（默认值为 64 ）时，
redis会使用跳跃表作为有序集合的底层实现。否则会使用ziplist作为有序集合的底层实现。

skiplist是什么?
  skiplist是一种以空间换取时间的结构。
  由于链表，无法进行二分查找，因此借鉴数据库索引的思想，提取出链表中关键节点（索引），先在关键节点上查找，再进入下层链表查找。
  提取多层关键节点，就形成了跳跃表。

  总结来讲 跳表 = 链表 + 多级索引

说说链表和数组的优缺点？为什么引出跳表？
  数组(无序)与链表，在查找元素时，时间复杂度最坏会出现O(n)，解决方法：升维，也叫空间换时间。
  跳表，典型的空间换时间的方案，给链表上层添加新的索引链表，就会出现 O(logn)的查询效率，详见: skiplist升级索引.png

跳表的时间复杂度  时间复杂度是O(logN)
跳表的空间复杂度  空间复杂度是O(N)

 跳表是一个最典型的空间换时间解决方案，而且只有在数据量较大的情况下才能体现出来优势。而且应该是读多写少的情况下才能使用，
所以它的适用范围应该还是比较有限的

维护成本相对要高 - 新增或者删除时需要把所有索引都更新一遍；
最后在新增和删除的过程中的更新，时间复杂度也是O(log n)