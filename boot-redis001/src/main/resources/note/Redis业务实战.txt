1.微信抢红包
   1.需求分析:
     1  各种节假日，发红包+抢红包，不说了，100%高并发业务要求，不能用mysql来做
     2 一个总的大红包，会有可能拆分成多个小红包，总金额= 分金额1+分金额2+分金额3......分金额N
     3 每个人只能抢一次，你需要有记录，比如100块钱，被拆分成10个红包发出去，
        总计有10个红包，抢一个少一个，总数显示(10/6)直到完，需要记录那些人抢到了红包，重复抢作弊不可以。
     4 有可能还需要你计时，完整抢完，从发出到全部over，耗时多少？
     5 红包过期，或者群主人品差，没人抢红包，原封不动退回。
     6 红包过期，剩余金额可能需要回退到发红包主账户下。
     由于是高并发不能用mysql来做，只能用redis，那需要要redis的什么数据类型？

   2.架构设计
      1. 发红包
      2. 抢红包
      3. 记红包
      4. 拆红包

     方案一:
       发红包,由于是单人操作，所以可以使用list结构实现，示例如下:
         lpush  red_package:uuid   10  20  30  30  10
       为什么使用list，主要是在发红包是，就根据红包算法，把每个人可以抢到的红包金额计算好，依次放入redis的list中即可，为什么提前计算好，后面揭晓。

       抢红包，直接使用redis的命令 Lpop就可以实现，这就是为什么先要提前计算好，而且不用加锁。

       记红包，可以使用hash结构实现，示例如下:
         hset redis_package_consume:uuid  uuid01 10  uuid02:20

       拆红包算法:
         1.所有人抢到金额之和等于红包金额，不能超过，也不能少于。
         2.每个人至少抢到一分钱。
         3.要保证所有人抢到金额的几率相等。

         二倍均值法

         剩余红包金额为M，剩余人数为N，那么有如下公式：

         每次抢到的金额 = 随机区间 （0， (剩余红包金额M ÷ 剩余人数N ) X 2）
         这个公式，保证了每次随机金额的平均值是相等的，不会因为抢红包的先后顺序而造成不公平。

         举个栗子：
         假设有10个人，红包总额100元。
         第1次：
         100÷10  X2 = 20, 所以第一个人的随机范围是（0，20 )，平均可以抢到10元。假设第一个人随机到10元，那么剩余金额是100-10 = 90 元。
         第2次：
         90÷9  X2 = 20, 所以第二个人的随机范围同样是（0，20 )，平均可以抢到10元。假设第二个人随机到10元，那么剩余金额是90-10 = 80 元。

       方案二:
         发红包,使用lstring结构实现，示例如下:
           set red_package:uuid  100
         使用string实现发红包的功能，那么在抢红包时，就需要加锁，实时计算红包金额，高并发场景下，性能损耗严重。

         记红包与方案一相同

详细代码参考: RedPackageController.java

2.B站视频、淘宝购物分享短连接推广





