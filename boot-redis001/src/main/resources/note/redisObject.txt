redisObjec结构的作用
 1. set hello word为例，因为Redis是KV键值对的数据库，每个键值对都会有一个dictEntry(源码位置：dict.h)，
   里面指向了key和value的指针，next 指向下一个 dictEntry。
   key 是字符串，但是 Redis 没有直接使用 C 的字符数组，而是存储在redis自定义的 SDS中。
   value 既不是直接作为字符串存储，也不是直接存储在 SDS 中，而是存储在redisObject 中。
   实际上五种常用的数据类型的任何一种，都是通过 redisObject 来存储的.

 2. 为了便于操作，Redis采用redisObjec结构来统一五种不同的数据类型，这样所有的数据类型就都可以以相同的形式在函数间传递而不用使用特定的类型结构。
   同时，为了识别不同的数据类型，redisObjec中定义了type和encoding字段对不同的数据类型加以区别。
   简单地说，redisObjec就是string、hash、list、set、zset的父类，可以在函数间传递时隐藏具体的类型信息，
   所以作者抽象了redisObjec结构来到达同样的目的。


RedisObject各字段的含义:

  typedef struct redisObject {
      unsigned type:4;
      unsigned encoding:4;
      unsigned lru:LRU_BITS; /* LRU time (relative to global lru_clock) or
                              * LFU data (least significant 8 bits frequency
                              * and most significant 16 bits access time). */
      int refcount;
      void *ptr;
  } robj;

  1. 4位的type表示具体的数据类型
  2. 4位的encoding表示该类型的物理编码方式如下，同一种数据类型可能有不同的编码方式。(比如String就提供了3种:int embstr raw)

      #define OBJ_ENCODING_RAW 0     /* Raw representation */
      #define OBJ_ENCODING_INT 1     /* Encoded as integer */
      #define OBJ_ENCODING_HT 2      /* Encoded as hash table */
      #define OBJ_ENCODING_ZIPMAP 3  /* Encoded as zipmap */
      #define OBJ_ENCODING_LINKEDLIST 4 /* No longer used: old list encoding. */
      #define OBJ_ENCODING_ZIPLIST 5 /* Encoded as ziplist */
      #define OBJ_ENCODING_INTSET 6  /* Encoded as intset */
      #define OBJ_ENCODING_SKIPLIST 7  /* Encoded as skiplist */
      #define OBJ_ENCODING_EMBSTR 8  /* Embedded sds string encoding */
      #define OBJ_ENCODING_QUICKLIST 9 /* Encoded as linked list of ziplists */
      #define OBJ_ENCODING_STREAM 10 /* Encoded as a radix tree of listpacks */
      #define OBJ_ENCODING_LISTPACK 11 /* Encoded as a listpack */

  3.lru字段表示当内存超限时采用LRU算法清除内存中的对象。
  4.refcount表示对象的引用计数。
  5.ptr指针指向真正的底层数据结构的指针

  举例说明:
    set age 17

    type           类型
    encoding       编码，此处是数字类型
    lru            最近被访问的时间
    refcount       等于1，表示当前对象被引用的次数
    ptr            value值是多少，当前就是17


